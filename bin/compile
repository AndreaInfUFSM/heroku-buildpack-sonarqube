#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

BP_DIR=`cd $(dirname $0); cd ..; pwd`

SONAR_VERSION="6.3.1"

install_jdk() {
  local install_dir=${1}

  JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
  mkdir -p /tmp/jvm-common
  curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
  source /tmp/jvm-common/bin/util
  source /tmp/jvm-common/bin/java
  source /tmp/jvm-common/opt/jdbc.sh

  install_java_with_overlay ${install_dir}
}

install_sonar() {
  local BUILD_DIR=${1}
  local CACHE_DIR=${2}

  SONAR_DIST="sonarqube-${SONAR_VERSION}"
  SONAR_DIST_ZIP="${SONAR_DIST}.zip"
  SONAR_HOME=${BUILD_DIR}/sonar

  if [ ! -d ${CACHE_DIR} ]; then
    mkdir -p ${CACHE_DIR}
  fi

  # Download Sonar if not in cache
  if [ ! -f ${CACHE_DIR}/${SONAR_DIST_ZIP} ]; then
    SONAR_URL="http://downloads.code-scan.com/bundler/${SONAR_DIST_ZIP}"
    echo -n "-----> Downloading ${SONAR_DIST}....."
    curl --silent --location ${SONAR_URL} > ${CACHE_DIR}/${SONAR_DIST_ZIP}
    echo " done"
  fi

  echo -n "-----> Installing ${SONAR_DIST}...."

  # Unzip Sonar
  # `unzip` command is not available.
  cd ${BUILD_DIR}

  jar xvf ${CACHE_DIR}/${SONAR_DIST_ZIP}
  mv ${SONAR_DIST} ${SONAR_HOME}

  # Copy vendored properties into Sonar
  cp ${BP_DIR}/etc/sonar.properties ${SONAR_HOME}/conf

  if [ "${PIPESTATUS[*]}" != "0" ]; then
    echo " !     Failed to install Sonar"
    exit 1
  fi
}

install_jdk ${BUILD_DIR}
install_sonar ${BUILD_DIR} ${CACHE_DIR}
